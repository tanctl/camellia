(* Comprehensive syntax showcase for Camellia DSL *)
circuit SyntaxShowcase {
  (* public inputs visible to verifier *)
  inputs: public_a, public_b, public_c
  
  (* private inputs known only to prover *)
  private inputs: secret_x, secret_y, nonce
  
  (* basic arithmetic operations *)
  sum_basic = public_a + public_b
  diff_basic = public_a - public_b  
  product_basic = public_a * public_b
  
  (* complex expressions with parentheses *)
  complex_expr = (public_a + public_b) * (secret_x - secret_y)
  
  (* field constants *)
  field_const = 42
  zero_value = 0
  large_field = 999999999
  
  (* poseidon hash function calls *)
  hash_two = poseidon(secret_x, secret_y)
  hash_many = poseidon(public_a, public_b, secret_x, secret_y, nonce)
  
  (* constraint assertions *)
  assert sum_basic == public_c
  assert product_basic == 100
  assert hash_two == 54321
}